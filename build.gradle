import java.text.SimpleDateFormat

buildscript {
    ext.kotlin_version = '1.2.60'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

version = '0.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'com.timcastelijns.room15bot.MainKt'

repositories {
    jcenter()
    maven { url = "https://jitpack.io" }

    // Database
    maven { url = "https://dl.bintray.com/kotlin/exposed" }
    maven { url = 'https://mvnrepository.com/artifac/' }
}

dependencies {
    implementation 'org.slf4j:slf4j-log4j12:1.7.5'
    implementation 'com.github.TimCastelijns:ChatExchange:1.0.0-beta3'

    implementation 'org.jetbrains:annotations:16.0.2'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation "io.reactivex.rxjava2:rxjava:2.1.3"
    implementation 'org.jsoup:jsoup:1.11.3'

    implementation "org.koin:koin-core:0.9.2"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.24.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'

    // Database
    implementation 'org.jetbrains.exposed:exposed:0.10.4'
    implementation "mysql:mysql-connector-java:5.1.46"
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.2.6'

    // Testing
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation 'org.koin:koin-test:0.9.2'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1"

}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

task writeBuildConfig() {
    def sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm")
    sdf.setTimeZone(TimeZone.getTimeZone("UTC"))
    def formattedTimestamp = sdf.format(new Date())

    def text = """|version: $version
    |branch: ${getGitBranch()}
    |commit: ${getGitHash()}
    |buildtime: $formattedTimestamp
    |""".stripMargin()

    new File("$projectDir/gen").mkdir()
    new File("$projectDir/gen/buildconfig.properties").text = text
}

def getGitBranch() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

tasks.run.dependsOn(writeBuildConfig)
